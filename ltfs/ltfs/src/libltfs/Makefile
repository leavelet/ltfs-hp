# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/libltfs/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
#  %Z% %I% %W% %G% %U%
#
#  ZZ_Copyright_BEGIN
#
#
#  Licensed Materials - Property of IBM
#
#  IBM Linear Tape File System Single Drive Edition Version 2.2.0.2 for Linux and Mac OS X
#
#  Copyright IBM Corp. 2010, 2014
#
#  This file is part of the IBM Linear Tape File System Single Drive Edition for Linux and Mac OS X
#  (formally known as IBM Linear Tape File System)
#
#  The IBM Linear Tape File System Single Drive Edition for Linux and Mac OS X is free software;
#  you can redistribute it and/or modify it under the terms of the GNU Lesser
#  General Public License as published by the Free Software Foundation,
#  version 2.1 of the License.
#
#  The IBM Linear Tape File System Single Drive Edition for Linux and Mac OS X is distributed in the
#  hope that it will be useful, but WITHOUT ANY WARRANTY; without even the
#  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#  See the GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public
#  License along with this library; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#  or download the license from <http://www.gnu.org/licenses/>.
#
#
#  ZZ_Copyright_END
#



pkgdatadir = $(datadir)/ltfs
pkgincludedir = $(includedir)/ltfs
pkglibdir = $(libdir)/ltfs
pkglibexecdir = $(libexecdir)/ltfs
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
subdir = src/libltfs
DIST_COMMON = $(nobase_pkginclude_HEADERS) $(noinst_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am_libltfs_la_OBJECTS = libltfs_la-ltfs.lo libltfs_la-ltfs_internal.lo \
	libltfs_la-ltfs_fsops.lo libltfs_la-ltfs_fsops_raw.lo \
	libltfs_la-fs.lo libltfs_la-xml_common.lo \
	libltfs_la-xml_writer.lo libltfs_la-xml_reader.lo \
	libltfs_la-xml_writer_libltfs.lo \
	libltfs_la-xml_reader_libltfs.lo libltfs_la-label.lo \
	libltfs_la-base64.lo libltfs_la-tape.lo libltfs_la-iosched.lo \
	libltfs_la-dcache.lo libltfs_la-kmi.lo libltfs_la-pathname.lo \
	libltfs_la-index_criteria.lo libltfs_la-xattr.lo \
	libltfs_la-ltfslogging.lo libltfs_la-ltfstrace.lo \
	libltfs_la-config_file.lo libltfs_la-plugin.lo \
	libltfs_la-periodic_sync.lo libltfs_la-uuid_internal.lo \
	libltfs_la-filename_handling.lo libltfs_la-time_internal.lo \
	libltfs_la-arch_info.lo libltfs_la-errormap.lo
libltfs_la_OBJECTS = $(am_libltfs_la_OBJECTS)
libltfs_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libltfs_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libltfs_la_SOURCES)
DIST_SOURCES = $(libltfs_la_SOURCES)
HEADERS = $(nobase_pkginclude_HEADERS) $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/jenkins_auto_builds/trunk/ltfs/build-aux/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/jenkins_auto_builds/trunk/ltfs/build-aux/missing --run tar
AM_CFLAGS = -Wall -Wsign-compare -D_FILE_OFFSET_BITS=64 -I/usr/include/fuse   -I/usr/include/uuid   -I/usr/include/libxml2   -D_REENTRANT    -I/usr/include  -fkeep-inline-functions -rdynamic
AM_CPPFLAGS = -D_GNU_SOURCE -DHPE_BUILD -I$(top_srcdir)/src -DLTFS_CONFIG_FILE='"${prefix}/etc/ltfs.conf"'
AM_LDFLAGS =  -pthread -lfuse   -luuid   -lxml2   -Wl,-z,relro   -lpthread -ldl -lm   -L/usr/lib64 -licui18n -licuuc -licudata  -lpthread -ldl -lm   
AR = ar
AUTOCONF = ${SHELL} /home/jenkins_auto_builds/trunk/ltfs/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/jenkins_auto_builds/trunk/ltfs/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /home/jenkins_auto_builds/trunk/ltfs/build-aux/missing --run automake-1.11
AWK = gawk
CC = gcc -std=gnu99
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -O0 -ggdb
CPP = gcc -E
CPPFLAGS = 
CRC_OPTIMIZE = -msse4.2 -O2 -D__SSE42__
CYGPATH_W = echo
DEFAULT_DRIVER = ltotape
DEFAULT_IOSCHED = unified
DEFAULT_KMI = none
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FUSE_MODULE_CFLAGS = -D_FILE_OFFSET_BITS=64 -I/usr/include/fuse  
FUSE_MODULE_LIBS = -pthread -lfuse  
GENRB = /bin/genrb
GREP = /bin/grep
ICU_MODULE_CFLAGS = -D_REENTRANT    -I/usr/include 
ICU_MODULE_LIBS = -Wl,-z,relro   -lpthread -ldl -lm   -L/usr/lib64 -licui18n -licuuc -licudata  -lpthread -ldl -lm   
INSTALL = /bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBXML2_MODULE_CFLAGS = -I/usr/include/libxml2  
LIBXML2_MODULE_LIBS = -lxml2  
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/jenkins_auto_builds/trunk/ltfs/build-aux/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = ltfs
PACKAGE_BUGREPORT = Hewlett Packard Enterprise Development LP
PACKAGE_NAME = LTFS
PACKAGE_STRING = LTFS 3.5.0
PACKAGE_TARNAME = ltfs
PACKAGE_VERSION = 3.5.0
PATH_SEPARATOR = :
PKGDATA = /bin/pkgdata
PKG_CONFIG = /bin/pkg-config
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
UUID_MODULE_CFLAGS = -I/usr/include/uuid  
UUID_MODULE_LIBS = -luuid  
VERSION = 3.5.0
abs_builddir = /home/jenkins_auto_builds/trunk/ltfs/src/libltfs
abs_srcdir = /home/jenkins_auto_builds/trunk/ltfs/src/libltfs
abs_top_builddir = /home/jenkins_auto_builds/trunk/ltfs
abs_top_srcdir = /home/jenkins_auto_builds/trunk/ltfs
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/jenkins_auto_builds/trunk/ltfs/build-aux/install-sh
libdir = /usr/local/lib64
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
lib_LTLIBRARIES = libltfs.la
noinst_HEADERS = 
nobase_pkginclude_HEADERS = ltfs.h tape_ops.h ltfs_types.h ltfslogging.h ltfstrace.h ltfs_thread.h ltfs_locking.h queue.h plugin.h config_file.h ltfs_error.h
libltfs_la_SOURCES = \
	ltfs.c \
	ltfs_internal.c \
	ltfs_fsops.c \
	ltfs_fsops_raw.c \
	fs.c \
	xml_common.c \
	xml_writer.c \
	xml_reader.c \
	xml_writer_libltfs.c \
	xml_reader_libltfs.c \
	label.c \
	base64.c \
	tape.c \
	iosched.c \
	dcache.c \
	kmi.c \
	pathname.c \
	index_criteria.c \
	xattr.c \
	ltfslogging.c \
	ltfstrace.c \
	config_file.c \
	plugin.c \
	periodic_sync.c \
	arch/uuid_internal.c \
	arch/filename_handling.c \
	arch/time_internal.c \
	arch/arch_info.c \
	arch/errormap.c

libltfs_la_DEPENDENCIES = ../../messages/libltfs_dat.o ../../messages/internal_error_dat.o
libltfs_la_LIBADD = ../../messages/libltfs_dat.o ../../messages/internal_error_dat.o
libltfs_la_CPPFLAGS = -D_GNU_SOURCE -DHPE_BUILD -I$(top_srcdir)/src -DLTFS_CONFIG_FILE='"${prefix}/etc/ltfs.conf"' -I ..
libltfs_la_LDFLAGS =  -pthread -lfuse   -luuid   -lxml2   -Wl,-z,relro   -lpthread -ldl -lm   -L/usr/lib64 -licui18n -licuuc -licudata  -lpthread -ldl -lm   
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/libltfs/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/libltfs/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libltfs.la: $(libltfs_la_OBJECTS) $(libltfs_la_DEPENDENCIES) 
	$(libltfs_la_LINK) -rpath $(libdir) $(libltfs_la_OBJECTS) $(libltfs_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libltfs_la-arch_info.Plo
include ./$(DEPDIR)/libltfs_la-base64.Plo
include ./$(DEPDIR)/libltfs_la-config_file.Plo
include ./$(DEPDIR)/libltfs_la-dcache.Plo
include ./$(DEPDIR)/libltfs_la-errormap.Plo
include ./$(DEPDIR)/libltfs_la-filename_handling.Plo
include ./$(DEPDIR)/libltfs_la-fs.Plo
include ./$(DEPDIR)/libltfs_la-index_criteria.Plo
include ./$(DEPDIR)/libltfs_la-iosched.Plo
include ./$(DEPDIR)/libltfs_la-kmi.Plo
include ./$(DEPDIR)/libltfs_la-label.Plo
include ./$(DEPDIR)/libltfs_la-ltfs.Plo
include ./$(DEPDIR)/libltfs_la-ltfs_fsops.Plo
include ./$(DEPDIR)/libltfs_la-ltfs_fsops_raw.Plo
include ./$(DEPDIR)/libltfs_la-ltfs_internal.Plo
include ./$(DEPDIR)/libltfs_la-ltfslogging.Plo
include ./$(DEPDIR)/libltfs_la-ltfstrace.Plo
include ./$(DEPDIR)/libltfs_la-pathname.Plo
include ./$(DEPDIR)/libltfs_la-periodic_sync.Plo
include ./$(DEPDIR)/libltfs_la-plugin.Plo
include ./$(DEPDIR)/libltfs_la-tape.Plo
include ./$(DEPDIR)/libltfs_la-time_internal.Plo
include ./$(DEPDIR)/libltfs_la-uuid_internal.Plo
include ./$(DEPDIR)/libltfs_la-xattr.Plo
include ./$(DEPDIR)/libltfs_la-xml_common.Plo
include ./$(DEPDIR)/libltfs_la-xml_reader.Plo
include ./$(DEPDIR)/libltfs_la-xml_reader_libltfs.Plo
include ./$(DEPDIR)/libltfs_la-xml_writer.Plo
include ./$(DEPDIR)/libltfs_la-xml_writer_libltfs.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libltfs_la-ltfs.lo: ltfs.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-ltfs.lo -MD -MP -MF $(DEPDIR)/libltfs_la-ltfs.Tpo -c -o libltfs_la-ltfs.lo `test -f 'ltfs.c' || echo '$(srcdir)/'`ltfs.c
	$(am__mv) $(DEPDIR)/libltfs_la-ltfs.Tpo $(DEPDIR)/libltfs_la-ltfs.Plo
#	source='ltfs.c' object='libltfs_la-ltfs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-ltfs.lo `test -f 'ltfs.c' || echo '$(srcdir)/'`ltfs.c

libltfs_la-ltfs_internal.lo: ltfs_internal.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-ltfs_internal.lo -MD -MP -MF $(DEPDIR)/libltfs_la-ltfs_internal.Tpo -c -o libltfs_la-ltfs_internal.lo `test -f 'ltfs_internal.c' || echo '$(srcdir)/'`ltfs_internal.c
	$(am__mv) $(DEPDIR)/libltfs_la-ltfs_internal.Tpo $(DEPDIR)/libltfs_la-ltfs_internal.Plo
#	source='ltfs_internal.c' object='libltfs_la-ltfs_internal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-ltfs_internal.lo `test -f 'ltfs_internal.c' || echo '$(srcdir)/'`ltfs_internal.c

libltfs_la-ltfs_fsops.lo: ltfs_fsops.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-ltfs_fsops.lo -MD -MP -MF $(DEPDIR)/libltfs_la-ltfs_fsops.Tpo -c -o libltfs_la-ltfs_fsops.lo `test -f 'ltfs_fsops.c' || echo '$(srcdir)/'`ltfs_fsops.c
	$(am__mv) $(DEPDIR)/libltfs_la-ltfs_fsops.Tpo $(DEPDIR)/libltfs_la-ltfs_fsops.Plo
#	source='ltfs_fsops.c' object='libltfs_la-ltfs_fsops.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-ltfs_fsops.lo `test -f 'ltfs_fsops.c' || echo '$(srcdir)/'`ltfs_fsops.c

libltfs_la-ltfs_fsops_raw.lo: ltfs_fsops_raw.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-ltfs_fsops_raw.lo -MD -MP -MF $(DEPDIR)/libltfs_la-ltfs_fsops_raw.Tpo -c -o libltfs_la-ltfs_fsops_raw.lo `test -f 'ltfs_fsops_raw.c' || echo '$(srcdir)/'`ltfs_fsops_raw.c
	$(am__mv) $(DEPDIR)/libltfs_la-ltfs_fsops_raw.Tpo $(DEPDIR)/libltfs_la-ltfs_fsops_raw.Plo
#	source='ltfs_fsops_raw.c' object='libltfs_la-ltfs_fsops_raw.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-ltfs_fsops_raw.lo `test -f 'ltfs_fsops_raw.c' || echo '$(srcdir)/'`ltfs_fsops_raw.c

libltfs_la-fs.lo: fs.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-fs.lo -MD -MP -MF $(DEPDIR)/libltfs_la-fs.Tpo -c -o libltfs_la-fs.lo `test -f 'fs.c' || echo '$(srcdir)/'`fs.c
	$(am__mv) $(DEPDIR)/libltfs_la-fs.Tpo $(DEPDIR)/libltfs_la-fs.Plo
#	source='fs.c' object='libltfs_la-fs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-fs.lo `test -f 'fs.c' || echo '$(srcdir)/'`fs.c

libltfs_la-xml_common.lo: xml_common.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-xml_common.lo -MD -MP -MF $(DEPDIR)/libltfs_la-xml_common.Tpo -c -o libltfs_la-xml_common.lo `test -f 'xml_common.c' || echo '$(srcdir)/'`xml_common.c
	$(am__mv) $(DEPDIR)/libltfs_la-xml_common.Tpo $(DEPDIR)/libltfs_la-xml_common.Plo
#	source='xml_common.c' object='libltfs_la-xml_common.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-xml_common.lo `test -f 'xml_common.c' || echo '$(srcdir)/'`xml_common.c

libltfs_la-xml_writer.lo: xml_writer.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-xml_writer.lo -MD -MP -MF $(DEPDIR)/libltfs_la-xml_writer.Tpo -c -o libltfs_la-xml_writer.lo `test -f 'xml_writer.c' || echo '$(srcdir)/'`xml_writer.c
	$(am__mv) $(DEPDIR)/libltfs_la-xml_writer.Tpo $(DEPDIR)/libltfs_la-xml_writer.Plo
#	source='xml_writer.c' object='libltfs_la-xml_writer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-xml_writer.lo `test -f 'xml_writer.c' || echo '$(srcdir)/'`xml_writer.c

libltfs_la-xml_reader.lo: xml_reader.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-xml_reader.lo -MD -MP -MF $(DEPDIR)/libltfs_la-xml_reader.Tpo -c -o libltfs_la-xml_reader.lo `test -f 'xml_reader.c' || echo '$(srcdir)/'`xml_reader.c
	$(am__mv) $(DEPDIR)/libltfs_la-xml_reader.Tpo $(DEPDIR)/libltfs_la-xml_reader.Plo
#	source='xml_reader.c' object='libltfs_la-xml_reader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-xml_reader.lo `test -f 'xml_reader.c' || echo '$(srcdir)/'`xml_reader.c

libltfs_la-xml_writer_libltfs.lo: xml_writer_libltfs.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-xml_writer_libltfs.lo -MD -MP -MF $(DEPDIR)/libltfs_la-xml_writer_libltfs.Tpo -c -o libltfs_la-xml_writer_libltfs.lo `test -f 'xml_writer_libltfs.c' || echo '$(srcdir)/'`xml_writer_libltfs.c
	$(am__mv) $(DEPDIR)/libltfs_la-xml_writer_libltfs.Tpo $(DEPDIR)/libltfs_la-xml_writer_libltfs.Plo
#	source='xml_writer_libltfs.c' object='libltfs_la-xml_writer_libltfs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-xml_writer_libltfs.lo `test -f 'xml_writer_libltfs.c' || echo '$(srcdir)/'`xml_writer_libltfs.c

libltfs_la-xml_reader_libltfs.lo: xml_reader_libltfs.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-xml_reader_libltfs.lo -MD -MP -MF $(DEPDIR)/libltfs_la-xml_reader_libltfs.Tpo -c -o libltfs_la-xml_reader_libltfs.lo `test -f 'xml_reader_libltfs.c' || echo '$(srcdir)/'`xml_reader_libltfs.c
	$(am__mv) $(DEPDIR)/libltfs_la-xml_reader_libltfs.Tpo $(DEPDIR)/libltfs_la-xml_reader_libltfs.Plo
#	source='xml_reader_libltfs.c' object='libltfs_la-xml_reader_libltfs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-xml_reader_libltfs.lo `test -f 'xml_reader_libltfs.c' || echo '$(srcdir)/'`xml_reader_libltfs.c

libltfs_la-label.lo: label.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-label.lo -MD -MP -MF $(DEPDIR)/libltfs_la-label.Tpo -c -o libltfs_la-label.lo `test -f 'label.c' || echo '$(srcdir)/'`label.c
	$(am__mv) $(DEPDIR)/libltfs_la-label.Tpo $(DEPDIR)/libltfs_la-label.Plo
#	source='label.c' object='libltfs_la-label.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-label.lo `test -f 'label.c' || echo '$(srcdir)/'`label.c

libltfs_la-base64.lo: base64.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-base64.lo -MD -MP -MF $(DEPDIR)/libltfs_la-base64.Tpo -c -o libltfs_la-base64.lo `test -f 'base64.c' || echo '$(srcdir)/'`base64.c
	$(am__mv) $(DEPDIR)/libltfs_la-base64.Tpo $(DEPDIR)/libltfs_la-base64.Plo
#	source='base64.c' object='libltfs_la-base64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-base64.lo `test -f 'base64.c' || echo '$(srcdir)/'`base64.c

libltfs_la-tape.lo: tape.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-tape.lo -MD -MP -MF $(DEPDIR)/libltfs_la-tape.Tpo -c -o libltfs_la-tape.lo `test -f 'tape.c' || echo '$(srcdir)/'`tape.c
	$(am__mv) $(DEPDIR)/libltfs_la-tape.Tpo $(DEPDIR)/libltfs_la-tape.Plo
#	source='tape.c' object='libltfs_la-tape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-tape.lo `test -f 'tape.c' || echo '$(srcdir)/'`tape.c

libltfs_la-iosched.lo: iosched.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-iosched.lo -MD -MP -MF $(DEPDIR)/libltfs_la-iosched.Tpo -c -o libltfs_la-iosched.lo `test -f 'iosched.c' || echo '$(srcdir)/'`iosched.c
	$(am__mv) $(DEPDIR)/libltfs_la-iosched.Tpo $(DEPDIR)/libltfs_la-iosched.Plo
#	source='iosched.c' object='libltfs_la-iosched.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-iosched.lo `test -f 'iosched.c' || echo '$(srcdir)/'`iosched.c

libltfs_la-dcache.lo: dcache.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-dcache.lo -MD -MP -MF $(DEPDIR)/libltfs_la-dcache.Tpo -c -o libltfs_la-dcache.lo `test -f 'dcache.c' || echo '$(srcdir)/'`dcache.c
	$(am__mv) $(DEPDIR)/libltfs_la-dcache.Tpo $(DEPDIR)/libltfs_la-dcache.Plo
#	source='dcache.c' object='libltfs_la-dcache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-dcache.lo `test -f 'dcache.c' || echo '$(srcdir)/'`dcache.c

libltfs_la-kmi.lo: kmi.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-kmi.lo -MD -MP -MF $(DEPDIR)/libltfs_la-kmi.Tpo -c -o libltfs_la-kmi.lo `test -f 'kmi.c' || echo '$(srcdir)/'`kmi.c
	$(am__mv) $(DEPDIR)/libltfs_la-kmi.Tpo $(DEPDIR)/libltfs_la-kmi.Plo
#	source='kmi.c' object='libltfs_la-kmi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-kmi.lo `test -f 'kmi.c' || echo '$(srcdir)/'`kmi.c

libltfs_la-pathname.lo: pathname.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-pathname.lo -MD -MP -MF $(DEPDIR)/libltfs_la-pathname.Tpo -c -o libltfs_la-pathname.lo `test -f 'pathname.c' || echo '$(srcdir)/'`pathname.c
	$(am__mv) $(DEPDIR)/libltfs_la-pathname.Tpo $(DEPDIR)/libltfs_la-pathname.Plo
#	source='pathname.c' object='libltfs_la-pathname.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-pathname.lo `test -f 'pathname.c' || echo '$(srcdir)/'`pathname.c

libltfs_la-index_criteria.lo: index_criteria.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-index_criteria.lo -MD -MP -MF $(DEPDIR)/libltfs_la-index_criteria.Tpo -c -o libltfs_la-index_criteria.lo `test -f 'index_criteria.c' || echo '$(srcdir)/'`index_criteria.c
	$(am__mv) $(DEPDIR)/libltfs_la-index_criteria.Tpo $(DEPDIR)/libltfs_la-index_criteria.Plo
#	source='index_criteria.c' object='libltfs_la-index_criteria.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-index_criteria.lo `test -f 'index_criteria.c' || echo '$(srcdir)/'`index_criteria.c

libltfs_la-xattr.lo: xattr.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-xattr.lo -MD -MP -MF $(DEPDIR)/libltfs_la-xattr.Tpo -c -o libltfs_la-xattr.lo `test -f 'xattr.c' || echo '$(srcdir)/'`xattr.c
	$(am__mv) $(DEPDIR)/libltfs_la-xattr.Tpo $(DEPDIR)/libltfs_la-xattr.Plo
#	source='xattr.c' object='libltfs_la-xattr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-xattr.lo `test -f 'xattr.c' || echo '$(srcdir)/'`xattr.c

libltfs_la-ltfslogging.lo: ltfslogging.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-ltfslogging.lo -MD -MP -MF $(DEPDIR)/libltfs_la-ltfslogging.Tpo -c -o libltfs_la-ltfslogging.lo `test -f 'ltfslogging.c' || echo '$(srcdir)/'`ltfslogging.c
	$(am__mv) $(DEPDIR)/libltfs_la-ltfslogging.Tpo $(DEPDIR)/libltfs_la-ltfslogging.Plo
#	source='ltfslogging.c' object='libltfs_la-ltfslogging.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-ltfslogging.lo `test -f 'ltfslogging.c' || echo '$(srcdir)/'`ltfslogging.c

libltfs_la-ltfstrace.lo: ltfstrace.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-ltfstrace.lo -MD -MP -MF $(DEPDIR)/libltfs_la-ltfstrace.Tpo -c -o libltfs_la-ltfstrace.lo `test -f 'ltfstrace.c' || echo '$(srcdir)/'`ltfstrace.c
	$(am__mv) $(DEPDIR)/libltfs_la-ltfstrace.Tpo $(DEPDIR)/libltfs_la-ltfstrace.Plo
#	source='ltfstrace.c' object='libltfs_la-ltfstrace.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-ltfstrace.lo `test -f 'ltfstrace.c' || echo '$(srcdir)/'`ltfstrace.c

libltfs_la-config_file.lo: config_file.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-config_file.lo -MD -MP -MF $(DEPDIR)/libltfs_la-config_file.Tpo -c -o libltfs_la-config_file.lo `test -f 'config_file.c' || echo '$(srcdir)/'`config_file.c
	$(am__mv) $(DEPDIR)/libltfs_la-config_file.Tpo $(DEPDIR)/libltfs_la-config_file.Plo
#	source='config_file.c' object='libltfs_la-config_file.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-config_file.lo `test -f 'config_file.c' || echo '$(srcdir)/'`config_file.c

libltfs_la-plugin.lo: plugin.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-plugin.lo -MD -MP -MF $(DEPDIR)/libltfs_la-plugin.Tpo -c -o libltfs_la-plugin.lo `test -f 'plugin.c' || echo '$(srcdir)/'`plugin.c
	$(am__mv) $(DEPDIR)/libltfs_la-plugin.Tpo $(DEPDIR)/libltfs_la-plugin.Plo
#	source='plugin.c' object='libltfs_la-plugin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-plugin.lo `test -f 'plugin.c' || echo '$(srcdir)/'`plugin.c

libltfs_la-periodic_sync.lo: periodic_sync.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-periodic_sync.lo -MD -MP -MF $(DEPDIR)/libltfs_la-periodic_sync.Tpo -c -o libltfs_la-periodic_sync.lo `test -f 'periodic_sync.c' || echo '$(srcdir)/'`periodic_sync.c
	$(am__mv) $(DEPDIR)/libltfs_la-periodic_sync.Tpo $(DEPDIR)/libltfs_la-periodic_sync.Plo
#	source='periodic_sync.c' object='libltfs_la-periodic_sync.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-periodic_sync.lo `test -f 'periodic_sync.c' || echo '$(srcdir)/'`periodic_sync.c

libltfs_la-uuid_internal.lo: arch/uuid_internal.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-uuid_internal.lo -MD -MP -MF $(DEPDIR)/libltfs_la-uuid_internal.Tpo -c -o libltfs_la-uuid_internal.lo `test -f 'arch/uuid_internal.c' || echo '$(srcdir)/'`arch/uuid_internal.c
	$(am__mv) $(DEPDIR)/libltfs_la-uuid_internal.Tpo $(DEPDIR)/libltfs_la-uuid_internal.Plo
#	source='arch/uuid_internal.c' object='libltfs_la-uuid_internal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-uuid_internal.lo `test -f 'arch/uuid_internal.c' || echo '$(srcdir)/'`arch/uuid_internal.c

libltfs_la-filename_handling.lo: arch/filename_handling.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-filename_handling.lo -MD -MP -MF $(DEPDIR)/libltfs_la-filename_handling.Tpo -c -o libltfs_la-filename_handling.lo `test -f 'arch/filename_handling.c' || echo '$(srcdir)/'`arch/filename_handling.c
	$(am__mv) $(DEPDIR)/libltfs_la-filename_handling.Tpo $(DEPDIR)/libltfs_la-filename_handling.Plo
#	source='arch/filename_handling.c' object='libltfs_la-filename_handling.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-filename_handling.lo `test -f 'arch/filename_handling.c' || echo '$(srcdir)/'`arch/filename_handling.c

libltfs_la-time_internal.lo: arch/time_internal.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-time_internal.lo -MD -MP -MF $(DEPDIR)/libltfs_la-time_internal.Tpo -c -o libltfs_la-time_internal.lo `test -f 'arch/time_internal.c' || echo '$(srcdir)/'`arch/time_internal.c
	$(am__mv) $(DEPDIR)/libltfs_la-time_internal.Tpo $(DEPDIR)/libltfs_la-time_internal.Plo
#	source='arch/time_internal.c' object='libltfs_la-time_internal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-time_internal.lo `test -f 'arch/time_internal.c' || echo '$(srcdir)/'`arch/time_internal.c

libltfs_la-arch_info.lo: arch/arch_info.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-arch_info.lo -MD -MP -MF $(DEPDIR)/libltfs_la-arch_info.Tpo -c -o libltfs_la-arch_info.lo `test -f 'arch/arch_info.c' || echo '$(srcdir)/'`arch/arch_info.c
	$(am__mv) $(DEPDIR)/libltfs_la-arch_info.Tpo $(DEPDIR)/libltfs_la-arch_info.Plo
#	source='arch/arch_info.c' object='libltfs_la-arch_info.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-arch_info.lo `test -f 'arch/arch_info.c' || echo '$(srcdir)/'`arch/arch_info.c

libltfs_la-errormap.lo: arch/errormap.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libltfs_la-errormap.lo -MD -MP -MF $(DEPDIR)/libltfs_la-errormap.Tpo -c -o libltfs_la-errormap.lo `test -f 'arch/errormap.c' || echo '$(srcdir)/'`arch/errormap.c
	$(am__mv) $(DEPDIR)/libltfs_la-errormap.Tpo $(DEPDIR)/libltfs_la-errormap.Plo
#	source='arch/errormap.c' object='libltfs_la-errormap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libltfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libltfs_la-errormap.lo `test -f 'arch/errormap.c' || echo '$(srcdir)/'`arch/errormap.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-nobase_pkgincludeHEADERS: $(nobase_pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)"
	@list='$(nobase_pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo "$(MKDIR_P) '$(DESTDIR)$(pkgincludedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(pkgincludedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(pkgincludedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkgincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkgincludedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local install-nobase_pkgincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES \
	uninstall-nobase_pkgincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am \
	install-data-local install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-nobase_pkgincludeHEADERS install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLTLIBRARIES \
	uninstall-nobase_pkgincludeHEADERS


install-data-local:
	if [ ! -d "$(prefix)/share/snmp" ]; then \
		mkdir -p "$(prefix)/share/snmp"; \
		cp LtfsSnmpTrapDef.txt LTFS-MIB.txt "$(prefix)/share/snmp/"; \
	elif [ ! -f "$(prefix)/share/snmp/LtfsSnmpTrapDef.txt" ]; then \
		cp LtfsSnmpTrapDef.txt "$(prefix)/share/snmp/LtfsSnmpTrapDef.txt"; \
	elif [ ! -f "$(prefix)/share/snmp/LTFS-MIB.txt" ]; then \
		cp LTFS-MIB.txt "$(prefix)/share/snmp/LTFS-MIB.txt"; \
	fi

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
